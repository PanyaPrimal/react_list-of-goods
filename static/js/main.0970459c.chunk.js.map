{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortAlphabetically","setState","ALPHABET","handleSortByLength","LENGTH","handleReverse","prevState","handleReset","getReorderedGoods","visibleGoods","sort","a","b","length","reverse","this","isResetBtnVisible","className","type","onClick","map","good","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,yBAA2B,WACzB,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,mBAAqB,WACnB,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,cAAgB,WACd,EAAKJ,UAAS,SAACK,GAAD,MAAgB,CAC5BT,YAAaS,EAAUT,gBApB7B,EAwBEU,YAAc,WACZ,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,EA+BES,kBAAoB,WAClB,MAAiC,EAAKZ,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACdY,EAAY,UAAOf,GAEvB,OAAQI,GACN,KAAKL,EAASS,SACZO,EAAaC,OAEb,MACF,KAAKjB,EAASW,OACZK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAY7C,OAJIhB,IACFY,EAAeA,EAAaK,WAGvBL,GArDX,4CAwDE,WACE,MAAiCM,KAAKnB,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZmB,EAAoBlB,IAAaL,EAASM,MAAQF,EAClDY,EAAeM,KAAKP,oBAE1B,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACWF,KAAKnB,MAAME,WAAaL,EAASS,SAC/C,GACA,YAGNiB,QAASJ,KAAKf,yBARhB,iCAaA,wBACEkB,KAAK,SACLD,UAAS,4BACcF,KAAKnB,MAAME,WAAaL,EAASW,OAClD,GACA,YAGNe,QAASJ,KAAKZ,mBARhB,4BAaA,wBACEe,KAAK,SACLD,UAAS,4BACcF,KAAKnB,MAAMC,WAC5B,GACA,YAGNsB,QAASJ,KAAKV,cARhB,qBAaCW,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAASJ,KAAKR,YAHhB,sBAUJ,6BACGE,EAAaW,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eApHrB,GAAyBC,iBCzBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0970459c.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends PureComponent<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState((prevState) => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  getReorderedGoods = (): string[] => {\n    const { sortType, isReversed } = this.state;\n    let visibleGoods = [...goodsFromServer];\n\n    switch (sortType) {\n      case SortType.ALPHABET:\n        visibleGoods.sort();\n\n        break;\n      case SortType.LENGTH:\n        visibleGoods.sort((a, b) => a.length - b.length);\n\n        break;\n      default:\n\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods = visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isResetBtnVisible = sortType !== SortType.NONE || isReversed;\n    const visibleGoods = this.getReorderedGoods();\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              `button is-info ${this.state.sortType === SortType.ALPHABET\n                ? ''\n                : 'is-light'\n              }`\n            }\n            onClick={this.handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              `button is-success ${this.state.sortType === SortType.LENGTH\n                ? ''\n                : 'is-light'\n              }`\n            }\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              `button is-warning ${this.state.isReversed\n                ? ''\n                : 'is-light'\n              }`\n            }\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {isResetBtnVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}